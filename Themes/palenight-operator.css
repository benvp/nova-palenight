meta {
  -theme-display-name: "Palenight Operator";
  -theme-interface-style: dark;
  -theme-vibrancy: none;
  -theme-accent-color: auto;
}

/*
 * Window styles
 */
meta.window {
  background-color: hsla(229, 22%, 20%, 1);
  border-color: hsla(229, 22%, 25%, 1);
}
meta.titlebar {
  color: hsla(232, 36%, 75%, 1);
  border-color: hsla(229, 22%, 25%, 1);
  background-color: hsla(229, 22%, 20%, 1);
}
meta.titlebar.inactive {
  background-color: hsla(228, 23%, 18%, 1);
}

meta.button {
  background: linear-gradient(hsl(210, 5%, 32%), hsl(210, 5%, 25%));
  border: linear-gradient(hsl(210, 5%, 17%), hsl(210, 5%, 13%));
  color: white;
}
meta.button.highlighted {
  background: linear-gradient(hsl(210, 5%, 42%), hsl(210, 5%, 34%));
  color: white;
}
meta.button.selected {
  color: white;
}
meta.button.highlighted.selected {
  color: white;
}
meta.button.disabled {
}

meta.textfield {
  background-color: hsl(210, 5%, 13%);
  border-color: hsl(210, 5%, 23%);
}
meta.textfield.highlighted {
  background-color: hsl(210, 5%, 10%);
  border-color: hsl(210, 5%, 23%);
}

/*
 * Document styles
 */
meta.document {
  background-color: hsla(229, 22%, 18%, 1);
  border-color: hsla(229, 22%, 25%, 1);
}

meta.document.button {
  background: linear-gradient(hsl(210, 5%, 25%), hsl(210, 5%, 21%));
  border: linear-gradient(hsl(210, 5%, 11%), hsl(210, 5%, 8%));
}
meta.document.button.disabled {
  background: linear-gradient(hsla(220, 5%, 25%, 0.3), hsla(220, 5%, 21%, 0.3));
}
meta.document.button.highlighted {
  background: linear-gradient(hsl(210, 5%, 34%), hsl(210, 5%, 30%));
}

meta.document.textfield {
  background-color: hsl(210, 5%, 10%);
  border-color: hsl(210, 5%, 19%);
}
meta.document.textfield.highlighted {
  background-color: hsl(210, 5%, 10%);
  border-color: hsl(210, 5%, 19%);
}

/* Text */
meta.text {
  color: hsla(219, 22%, 79%, 1);
}
meta.text.invisible {
  color: hsla(210, 100%, 90%, 0.12);
}
meta.text.selected {
  background-color: hsla(229, 23%, 32%, 1);
}

/* Cursor */
meta.cursor {
  background-color: hsla(230, 21%, 16%, 1);
}

/* Indentation Guides */
meta.indentguide {
  border-color: hsla(220, 5%, 48%, 0.2);
}

/* Gutter */
meta.gutter {
  color: hsla(230, 21%, 38%, 1);
}
meta.gutter.selected {
  background-color: hsla(230, 21%, 34%, 1);
  color: hsla(230, 21%, 75%, 1);
}

/*
 * Syntax styles
 */

keyword {
  color: hsl(276, 68%, 75%);
  font-style: italic;
}
comment {
  color: hsl(231, 19%, 50%);
}
processing {
  color: hsl(210, 11%, 45%);
}
declaration {
  color: hsl(221, 100%, 75%);
}
bracket {
  color: hsl(218, 21%, 79%);
}
operator {
  color: hsl(197, 100%, 77%);
}
invalid {
  background-color: hsl(14, 90%, 70%);
  color: hsl(200, 82%, 4%);
}
link {
  color: hsl(350, 100%, 76%);
  text-decoration: underline;
}

/* Values */
value.boolean {
  color: hsl(350, 100%, 67%);
}
value.null {
  color: hsl(350, 100%, 67%);
}
value.number {
  color: hsl(14, 90%, 70%);
}
value.entity {
  color: hsl(39, 100%, 71%);
}
value.symbol {
  color: hsl(221, 100%, 75%);
}

/* Identifiers */
identifier.type {
  color: hsl(41, 100%, 69%);
}
identifier.constant {
  color: hsl(221, 100%, 75%);
}
identifier.global,
identifier.variable {
  color: hsl(218, 21%, 79%);
}
identifier.property: {
  color: hsl(218, 21%, 79%);
  font-style: italic;
}
identifier.decorator,
identifier.function,
identifier.method {
  color: hsl(221, 100%, 75%);
  font-style: italic;
}
identifier.key {
  color: hsl(197, 100%, 77%);
}
identifier.argument {
  color: hsl(233, 70%, 69%);
}

/* Strings */
string {
  color: hsl(84, 66%, 73%);
  font-style: italic;
}
string.key {
  color: hsl(197, 100%, 77%);
}
string-template {
  color: hsl(2, 63%, 54%);
}
string-template.value {
  color: hsl(2, 63%, 54%);
}
regex {
  color: hsl(174, 42%, 65%);
}
regex.escaped {
  color: hsl(27, 97%, 63%);
}
cdata {
  color: hsl(210, 100%, 70%);
}

/* Markup */
markup.heading {
  color: hsl(217, 100%, 75%);
}
markup.line {
  color: hsl(60, 43%, 56%);
}
markup.bold {
  color: hsl(39, 100%, 71%);
  font-weight: bold;
}
markup.italic {
  color: hsl(276, 68%, 75%);
  font-style: italic;
}
markup.strikethrough {
  color: hsl(0, 100%, 70%);
}
markup.list.item {
  color: hsl(129, 58%, 91%);
}
markup.code {
  background-color: rgba(128, 128, 128, 0.2);
}
markup.link {
  color: hsl(350, 100%, 76%);
}

/* Types */
definition.class class.name,
definition.type type.name,
definition.package package.name,
definition.enum enum.name,
definition.union union.name,
definition.struct struct.name {
  font-weight: bold;
  font-style: italic;
  color: hsl(258, 57%, 70%);
}

/* Members */
definition.property property.name,
definition.function function.name,
definition.method method.name {
  color: hsl(218, 21%, 79%);
  font-style: italic;
}

/* Tags */
tag {
  color: hsl(350, 100%, 67%);
}
tag.framework {
  color: hsl(258, 57%, 70%);
}
tag.attribute.name {
  color: hsl(39, 100%, 71%);
}
tag.attribute.value {
  color: hsl(84, 66%, 73%);
}
tag.attribute.value.link {
  color: hsl(350, 100%, 76%);
}

/* Styles */
style.at {
  color: hsl(25, 100%, 63%);
  font-weight: bold;
}
style.selector {
  color: hsl(39, 100%, 71%);
}
style.selector.element {
  font-weight: bold;
}
style.selector.identifier.id {
  color: hsl(166, 41%, 62%);
}
style.selector.identifier.class {
  color: hsl(39, 100%, 71%);
}
style.selector.pseudoclass {
  color: hsl(39, 100%, 71%);
}
style.selector.pseudoelement {
  color: hsl(25, 100%, 63%);
}
style.attribute.name {
  color: hsl(175, 43%, 64%);
}
style.value.number {
  color: hsl(15, 93%, 69%);
}
style.value.number.unit {
  color: hsl(49, 100%, 79%);
  font-style: italic;
}
style.value.color.hex {
  color: hsl(197, 100%, 76%);
}
style.value.keyword {
  color: hsl(210, 100%, 70%);
}
style.value.color.named {
  color: hsl(197, 100%, 76%);
}
style.value.identifier.function {
  color: hsl(40, 100%, 64%);
}

/* Terminal */
terminal.black {
  color: hsl(231, 18%, 49%);
}
terminal.red {
  color: hsl(350, 100%, 67%);
}
terminal.green {
  color: hsl(84, 40%, 64%);
}
terminal.yellow {
  color: hsl(39, 100%, 71%);
}
terminal.blue {
  color: hsl(221, 100%, 75%);
}
terminal.magenta {
  color: hsl(276, 68%, 75%);
}
terminal.cyan {
  color: hsl(197, 100%, 77%);
}
terminal.white {
  color: hsl(0, 0%, 95%);
}
terminal.bright-black {
  color: hsl(231, 18%, 49%);
}
terminal.bright-red {
  color: hsl(350, 100%, 67%);
}
terminal.bright-green {
  color: hsl(84, 66%, 73%);
}
terminal.bright-yellow {
  color: hsl(39, 100%, 71%);
}
terminal.bright-blue {
  color: hsl(221, 100%, 75%);
}
terminal.bright-magenta {
  color: hsl(276, 68%, 75%);
}
terminal.bright-cyan {
  color: hsl(197, 100%, 77%);
}
terminal.bright-white {
  color: hsl(0, 0%, 100%);
}
